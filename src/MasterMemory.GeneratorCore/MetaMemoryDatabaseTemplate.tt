<#@ template debug="false" hostspecific="false" linePragmas="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// <auto-generated />
<#= Using #>

namespace <#= Namespace #>
{
   public static class <#= ClassName #>
   {
        static MasterMemory.Meta.MetaDatabase metaTable;

        public static object GetTable(MemoryDatabase db, string tableName)
        {
            switch (tableName)
            {
<# foreach(var item in GenerationContexts) { #>
                case "<#= item.MemoryTableName #>":
                    return db.<#= item.ClassName #>Table;
<# } #>                
                default:
                    return null;
            }
        }

        public static MasterMemory.Meta.MetaDatabase GetMetaDatabase()
        {
            if (metaTable != null) return metaTable;

            var dict = new Dictionary<string, MasterMemory.Meta.MetaTable>();
<# foreach(var item in GenerationContexts) { #>
            dict.Add("<#= item.MemoryTableName #>", <#= Namespace #>.Tables.<#= item.ClassName #>Table.CreateMetaTable());
<# } #>

            metaTable = new MasterMemory.Meta.MetaDatabase(dict);
            return metaTable;
        }
    }
}